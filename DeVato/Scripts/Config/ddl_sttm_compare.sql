WITH DDL_VAL AS
(
SELECT
SUBSTRING(ISSUE_COM,0,INSTR(ISSUE_COM,'|')) AS DDL_ISSUE,
SUBSTRING(SUBSTRING(ISSUE_COM,INSTR(ISSUE_COM,'|')+1),0,INSTR(SUBSTRING(ISSUE_COM,INSTR(ISSUE_COM,'|')+1),'|')) AS DDL_TABLE_TYPE,
SUBSTRING(ISSUE_COM,INSTR(ISSUE_COM,'|',-1)+1) AS DDL_ISSUE_TYPE,
DM_TABLE_NAME,
DM_COLUMN_NAME,
DM_COLUMN_DATA_TYPE,
DM_COLUMN_NULL_TYPE,
PRD_TABLE_NAME,
PRD_COLUMN_NAME,
PRD_COL_DATA_TYPE,
PRD_COLUMN_NULL_TYPE,
DRV_TABLE_NAME,
DRV_COL_NAME
FROM
(
SELECT DISTINCT
NVL(DM_TABLE_NAME,'') AS DM_TABLE_NAME,
NVL(DM_COLUMN_NAME,'') AS DM_COLUMN_NAME,
NVL(DM_COLUMN_DATA_TYPE,'') AS DM_COLUMN_DATA_TYPE,
NVL(DECODE(DM_COLUMN_NULL_TYPE,'TRUE','NOT NULL','FALSE','NULL'),'') AS DM_COLUMN_NULL_TYPE,
NVL(PRD_TABLE_NAME,'') AS PRD_TABLE_NAME,
NVL(PRD_COLUMN_NAME,'') AS PRD_COLUMN_NAME,
NVL(PRD_COLUMN_DATA_TYPE,'') AS PRD_COL_DATA_TYPE,
NVL(DECODE(PRD_COLUMN_NULL_TYPE,'TRUE','NOT NULL','FALSE','NULL'),'') AS PRD_COLUMN_NULL_TYPE,
CASE
WHEN TABLE_EXIST_IND='Y' AND
     (DM_COLUMN_DATA_TYPE = PRD_COLUMN_DATA_TYPE) AND (DM_COLUMN_NULL_TYPE=PRD_COLUMN_NULL_TYPE) THEN 'No|Existing Table|Column Matched'
WHEN TABLE_EXIST_IND='Y' AND (DM_COLUMN_DATA_TYPE <> PRD_COLUMN_DATA_TYPE) THEN 'Yes|Existing Table|Data Type Mismatched'
WHEN TABLE_EXIST_IND='Y' AND (DM_COLUMN_NULL_TYPE <> PRD_COLUMN_NULL_TYPE) THEN 'Yes|Existing Table|Not Null Mismatched'
WHEN TABLE_EXIST_IND='Y' AND  PRD_COLUMN_NAME IS NULL AND  DM_COLUMN_NAME IS NOT NULL THEN 'No|Existing Table|New Column Added'
WHEN TABLE_EXIST_IND='Y' AND  DM_COLUMN_NAME IS NULL THEN 'Yes|Existing Table|Column Deleted'
WHEN TABLE_EXIST_IND='N' THEN 'No|New Table|New Column'
END AS ISSUE_COM,
DRV_TABLE_NAME,
DRV_COL_NAME
FROM
(
SELECT
DM_TABLE_NAME,
DM_COLUMN_NAME,
DM_COLUMN_DATA_TYPE,
DM_COLUMN_NULL_TYPE,
SRC.PRD_TABLE_NAME,
SRC.PRD_COLUMN_NAME,
SRC.PRD_COLUMN_DATA_TYPE,
SRC.PRD_COLUMN_NULL_TYPE,
DRV_TABLE_NAME,
DRV_COL_NAME,
CASE WHEN EXT_PROD.PRD_TABLE_NAME IS NULL THEN 'N' ELSE 'Y' END AS TABLE_EXIST_IND
FROM
(
SELECT DISTINCT
DM.DM_TABLE_NAME,
DM.DM_COLUMN_NAME,
DM.DM_COLUMN_DATA_TYPE,
DM.DM_COLUMN_NULL_TYPE,
PRD.PRD_TABLE_NAME,
PRD.PRD_COLUMN_NAME,
PRD.PRD_COLUMN_DATA_TYPE,
PRD.PRD_COLUMN_NULL_TYPE,
COALESCE(DM.DM_TABLE_NAME,PRD.PRD_TABLE_NAME) AS DRV_TABLE_NAME,
COALESCE(DM.DM_COLUMN_NAME,PRD.PRD_COLUMN_NAME) AS DRV_COL_NAME
FROM STG_DEV_AUTO_DM_DDL DM
FULL OUTER JOIN STG_DEV_AUTO_PRD_DDL PRD
ON DM.DM_TABLE_NAME=PRD.PRD_TABLE_NAME
AND DM.DM_COLUMN_NAME=PRD.PRD_COLUMN_NAME
)SRC
LEFT OUTER JOIN STG_DEV_AUTO_PRD_DDL EXT_PROD
ON EXT_PROD.PRD_TABLE_NAME=SRC.DRV_TABLE_NAME
)SRC
)DRV
)
,
STTM_RULE_TABLE
AS
(
SELECT
CASE WHEN UPPER(STTM_RULE_TYPE) LIKE '%DER%' OR UPPER(STTM_RULE_TYPE) LIKE '%TRANS%' THEN 'Defined-STTM-Trasformation'
     WHEN UPPER(STTM_RULE_TYPE) LIKE '%DIR%'  THEN 'Defined-STTM-Direct Map'
     WHEN UPPER(STTM_RULE_TYPE) LIKE '%CODE%' THEN 'Defined-STTM-Code Map'
     WHEN UPPER(STTM_RULE_TYPE) LIKE '%DEF%'  THEN 'Defined-STTM-Default Map'
     WHEN UPPER(STTM_RULE_TYPE) LIKE '%KE%'  THEN 'Defined-STTM-ETL Generate Key Map'
ELSE ''
END AS STTM_RULE_TYPE,
TRIM(STTM_MODIFIED_BY) AS STTM_MODIFIED_BY,
TRIM(STTM_TABLE_NAME) AS STTM_TABLE_NAME,
TRIM(STTM_COLUMN_NAME) AS STTM_COLUMN_NAME,
TRIM(STTM_COLUMN_DATA_TYPE) AS STTM_COLUMN_DATA_TYPE,
TRIM(STTM_COLUMN_NULL_TYPE) AS STTM_COLUMN_NULL_TYPE,
TRIM(STTM_COLUMN_DEFAULT_VALUE) AS STTM_COLUMN_DEFAULT_VALUE,
TRIM(STTM_FILE_NAME) AS STTM_FILE_NAME
FROM STG_DEV_AUTO_STTM_DDL WHERE NVL(TRIM(STTM_COLUMN_NAME),'')<>''
)
SELECT
STTM_FILE_NAME,
STTM_MODIFIED_BY,
SUBSTRING(STTM_ISSUE_TYPE,0,INSTR(STTM_ISSUE_TYPE,'|')) AS STTM_ISSUE,
SUBSTRING(SUBSTRING(STTM_ISSUE_TYPE,INSTR(STTM_ISSUE_TYPE,'|')+1),0,INSTR(SUBSTRING(STTM_ISSUE_TYPE,INSTR(STTM_ISSUE_TYPE,'|')+1),'|')) AS STTM_COLUMN_TYPE,
SUBSTRING(STTM_ISSUE_TYPE,INSTR(STTM_ISSUE_TYPE,'|',-1)+1) AS STTM_ISSUE_TYPE,
STTM_RULE_TYPE,
STTM_TABLE_NAME,
STTM_COLUMN_NAME,
DM_TABLE_NAME,
DM_COL_NAME,
DDL_ISSUE,
DDL_TABLE_TYPE,
DDL_ISSUE_TYPE
FROM
(
SELECT DISTINCT
SRC.DM_TABLE_NAME,
SRC.DM_COL_NAME,
SRC.STTM_TABLE_NAME,
SRC.STTM_COLUMN_NAME,
SRC.STTM_RULE_TYPE,
SRC.STTM_MODIFIED_BY,
SRC.STTM_FILE_NAME,
SRC.DDL_ISSUE,
SRC.DDL_TABLE_TYPE,
SRC.DDL_ISSUE_TYPE,
CASE
  WHEN SRC.TABLE_EXIST_IND='Y' AND SRC.DM_COL_NAME IS  NOT NULL AND SRC.STTM_COLUMN_NAME IS NOT NULL THEN 'No|Existing Column|Available in STTM - Available in DDL'  
  WHEN SRC.TABLE_EXIST_IND='Y' AND SRC.DM_COL_NAME IS  NOT NULL AND SRC.STTM_COLUMN_NAME IS NULL THEN 'Yes|Existing Column|Available in DDL - Not in STTM'
  WHEN SRC.TABLE_EXIST_IND='Y' AND SRC.DM_COL_NAME IS  NULL AND SRC.STTM_COLUMN_NAME IS NOT NULL THEN 'Yes|Existing Column|Available in STTM - Not in DDL' 
  WHEN SRC.TABLE_EXIST_IND='N' THEN 'Yes|New Table|Available in DDL - Not in STTM'
END AS STTM_ISSUE_TYPE
FROM
(
SELECT DISTINCT
SRC.DM_TABLE_NAME,
SRC.DM_COL_NAME,
SRC.DDL_ISSUE,
SRC.DDL_TABLE_TYPE,
SRC.DDL_ISSUE_TYPE,
SRC.STTM_TABLE_NAME,
SRC.STTM_COLUMN_NAME,
SRC.STTM_RULE_TYPE,
SRC.STTM_MODIFIED_BY,
SRC.STTM_FILE_NAME,
CASE WHEN EXT_STTM.STTM_TABLE_NAME IS NULL THEN 'N' ELSE 'Y' END AS TABLE_EXIST_IND
FROM
(
SELECT DISTINCT
DDVAL.DRV_TABLE_NAME AS DM_TABLE_NAME,
DDVAL.DRV_COL_NAME AS DM_COL_NAME,
DDVAL.DDL_ISSUE,
DDVAL.DDL_TABLE_TYPE,
DDVAL.DDL_ISSUE_TYPE,
SRULE.STTM_TABLE_NAME,
SRULE.STTM_COLUMN_NAME,
SRULE.STTM_RULE_TYPE,
SRULE.STTM_MODIFIED_BY,
SRULE.STTM_FILE_NAME,
COALESCE(DDVAL.DRV_TABLE_NAME,SRULE.STTM_TABLE_NAME) AS DRV_TABLE_NAME,
COALESCE(DDVAL.DRV_COL_NAME,SRULE.STTM_COLUMN_NAME) AS DRV_COL_NAME
FROM DDL_VAL DDVAL
FULL OUTER JOIN STG_DEV_AUTO_STTM_DDL SRULE
ON DDVAL.DRV_TABLE_NAME=SRULE.STTM_TABLE_NAME
AND DDVAL.DRV_COL_NAME=SRULE.STTM_COLUMN_NAME
)SRC
LEFT JOIN STG_DEV_AUTO_STTM_DDL EXT_STTM
ON SRC.DRV_TABLE_NAME=EXT_STTM.STTM_TABLE_NAME
)SRC
)DRV
ORDER BY STTM_ISSUE_TYPE,DM_TABLE_NAME,DM_COL_NAME
;